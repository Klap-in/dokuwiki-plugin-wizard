<?php
/**
 * DokuWiki Plugin @@PLUGIN_NAME@@ (Syntax Component)
 *
 * @license GPL 2 http://www.gnu.org/licenses/gpl-2.0.html
 * @author  @@AUTHOR_NAME@@ <@@AUTHOR_MAIL@@>
 */

// must be run within Dokuwiki
if (!defined('DOKU_INC')) die();

if (!defined('DOKU_LF')) define('DOKU_LF', "\n");
if (!defined('DOKU_TAB')) define('DOKU_TAB', "\t");
if (!defined('DOKU_PLUGIN')) define('DOKU_PLUGIN',DOKU_INC.'lib/plugins/');

require_once(DOKU_PLUGIN.'syntax.php');

class @@PLUGIN_COMPONENT_NAME@@ extends DokuWiki_Syntax_Plugin {

    function getInfo() {
        return confToHash(dirname(__FILE__).'/@@INFO_TXT_PATH@@');
    }

    function getType() {
        return 'FIXME: container|baseonly|formatting|substition|protected|disabled|paragraphs';
    }

    function getPType() {
        return 'FIXME: normal|block|stack';
    }

    function getSort() {
        return FIXME;
    }


    function connectTo($mode) {
        $this->Lexer->addSpecialPattern('<FIXME>',$mode,'@@PLUGIN_COMPONENT_NAME@@');
//        $this->Lexer->addEntryPattern('<FIXME>',$mode,'@@PLUGIN_COMPONENT_NAME@@');
    }

//    function postConnect() {
//        $this->Lexer->addExitPattern('</FIXME>','@@PLUGIN_COMPONENT_NAME@@');
//    }

    function render($mode, &$renderer, $data) {
        if($mode != 'xhtml') return false;

        return true;
    }
}

// vim:ts=4:sw=4:et:enc=utf-8:
